# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.6

variables:
    PYTHONUNBUFFERED: "1"

before_script:
  - pip install tox

pep8:
  stage: test
  script:
  - tox -e pep8
  # for now
  allow_failure: true


#######################################################################################
#
# Functionnal tests:
#   - We boot a fresh instance of sharelatex and run test against it
#   - Test locally:
#     gitlab-runner exec docker \
#      --docker-volumes /var/run/docker.sock:/var/run/docker.sock \
#      functionnal
#
#######################################################################################
functionnal:
    stage: test
    script:
    # Install docker programs (docker-cli, docker-compose)
    - apt update
    - apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
    - curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
    - apt-key fingerprint 0EBFCD88
    - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
    - apt update
    - apt install -y docker-ce-cli
    - pip install --upgrade pip setuptools wheel
    - pip install docker-compose
    #  Install sharelatex
    - cd sharelatex/tests
    - docker-compose up -d
    # Prepare the the functionnal tests
    # -create an user
    # -export the env variables needed by the tests
    - docker cp CreateUserTest.coffee sharelatex:/var/www/sharelatex/tasks/CreateUserTest.coffee
    - docker exec --workdir /var/www/sharelatex -i sharelatex grunt user:test --email=joe@inria.fr
    - export CI_BASE_URL=http://172.17.0.1:8080
    - export CI_USERNAME=joe@inria.fr
    - export CI_PASSWORD=test
    # let's test !
    - tox -e py36


########################################################################################
#
# Release zone:
#   - Create the wheel
#   - push it on pypi
#   - build and publish the doc
#
##########################################################################################
pages:
    stage: deploy
    tags: [qlf-ci.inria.fr]
    only:
    - tags
    script:
    - tox -e docs
    - mkdir -p public/
    - cp -r docs/_build/html/* public/
    artifacts:
      paths:
      - public

pypi:
    stage: deploy
    tags: [qlf-ci.inria.fr]
    only:
    - tags
    script:
    - python setup.py bdist_wheel
    - pip install twine
    # credentials are set in the env by gitlab
    - twine upload dist/* --verbose